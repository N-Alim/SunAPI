J'ai voulu utiliser une API donnant des données liées au soleil en fonctions de coordonnées géographiques. 
Pour ce faire, je me suis dit que faire une interface où l'on pourrait se déplacer sur la Terre et interagir avec cette dernière.
Après réflexion, je me suis dit qu'une interface similaire à un globe terrestre, avec un affichage des données de l'API sur le côté serait la plus ergonomique/ pratique (pas sûr des termes ici).
Je suis donc parti sur cette idée de faire un globe terrestre, ce qui m'a donc amené au point suivant: il me fallait faire de la 3D.
Pour ce faire, je me suis documenté à ce sujet et ai determiné plusieurs options:
- le faire en HTML, CSS et java natif
- le faire avec un canvas et un contexte webgl
- le faire avec un framework webgl (three.js, babylon.js)
J'ai opté en raison de la compléxité et du temps demandé pour faire de la 3D pour un framework webgl, ce dernier me simplifiant grandement la tâche.
J'ai alors selectioné Three.js parmi (A-Frame, Babylon.js, PlayCanvas, Three.js) les frameworks webgl les plus utilisé, 
ce après avoir étudié/observé la demande sur le marché et en raison de sa forte utilisation et documentation










Difficultés:
Séparer le click du drag
Faire un drag pas trop rapide et avec des limites (pour l'axe y)
Appliquer le raytracing (pour pouvoir intéragir vec la souris sur le rendu)
Déterminer les coordonées du clic sur la Terre
Transformer les coordonnées du clic sur la terre en coordonnées géographiques